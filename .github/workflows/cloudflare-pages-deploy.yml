name: Build and Test

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run tests
        run: pnpm test

      - name: Build application
        run: pnpm build
        env:
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
          CONTACT_EMAIL: ${{ secrets.CONTACT_EMAIL }}

      - name: Install dependencies for Lighthouse CI
        run: |
          sudo apt-get update
          sudo apt-get install -y jq chromium-browser

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli@0.11.x puppeteer

      - name: Run Lighthouse CI
        run: |
          export CHROME_PATH=$(which chromium-browser)
          lhci autorun --collect.chromePath="$CHROME_PATH"
        continue-on-error: true
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Deployment to Cloudflare Pages has been disabled
      # Uncomment the following section to re-enable manual deployment
      # - name: Publish to Cloudflare Pages
      #   id: cloudflare-publish
      #   uses: cloudflare/wrangler-action@v3
      #   with:
      #     apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      #     accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      #     command: pages deploy .vercel/output --project-name=clubs-en-action
      #     gitHubToken: ${{ secrets.GITHUB_TOKEN }}
      #
      # - name: Add deployment URL as a comment
      #   uses: actions/github-script@v7
      #   if: github.event_name == 'pull_request'
      #   with:
      #     script: |
      #       const deploymentUrl = ${{ steps.cloudflare-publish.outputs.deployment-url }}
      #       github.rest.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: `ðŸš€ DÃ©ploiement de prÃ©visualisation disponible: [${deploymentUrl}](${deploymentUrl})`
      #       })
